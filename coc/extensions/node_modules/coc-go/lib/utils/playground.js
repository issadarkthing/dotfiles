"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
const child_process_1 = require("child_process");
const tools_1 = require("./tools");
const binaries_1 = require("../binaries");
async function openPlayground(document) {
    return runGoplay(document.getText());
}
exports.openPlayground = openPlayground;
async function runGoplay(code) {
    const bin = await tools_1.goBinPath(binaries_1.GOPLAY);
    if (!await tools_1.commandExists(bin)) {
        await tools_1.installGoBin(binaries_1.GOPLAY);
    }
    return new Promise((resolve, reject) => {
        const p = child_process_1.execFile(bin, ['-'], {}, async (err, stdout, stderr) => {
            coc_nvim_1.workspace.showMessage(stdout);
            if (err) {
                coc_nvim_1.workspace.showMessage(`${stderr}`, "error");
                return reject(err);
            }
            resolve(true);
        });
        if (p.pid) {
            p.stdin.end(code);
        }
    });
}
//# sourceMappingURL=playground.js.map