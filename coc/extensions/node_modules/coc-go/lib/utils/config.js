"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const path_1 = tslib_1.__importDefault(require("path"));
const coc_nvim_1 = require("coc.nvim");
const state = {};
function getConfig() {
    const config = coc_nvim_1.workspace.getConfiguration().get('go');
    if (config.commandPath) {
        coc_nvim_1.workspace.showMessage("Go: Configuration 'go.commandPath' is deprected, use 'go.goplsPath' instead!", "warning");
        config.goplsPath = config.commandPath;
    }
    return coc_nvim_1.workspace.getConfiguration().get('go');
}
exports.getConfig = getConfig;
function setStoragePath(dir) {
    state.storagePath = dir;
}
exports.setStoragePath = setStoragePath;
async function configDir(...names) {
    const storage = state.storagePath || (() => {
        const home = require('os').homedir();
        return path_1.default.join(home, '.config', 'coc', 'go');
    })();
    const dir = path_1.default.join(storage, ...names);
    return new Promise((resolve) => {
        if (!fs_1.default.existsSync(dir)) {
            fs_1.default.mkdirSync(dir, { recursive: true });
        }
        resolve(dir);
    });
}
exports.configDir = configDir;
//# sourceMappingURL=config.js.map